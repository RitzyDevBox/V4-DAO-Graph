// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccountTransfer extends ethereum.Event {
  get params(): AccountTransfer__Params {
    return new AccountTransfer__Params(this);
  }
}

export class AccountTransfer__Params {
  _event: AccountTransfer;

  constructor(event: AccountTransfer) {
    this._event = event;
  }

  get accountId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get toAccountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get assetKey(): AccountTransferAssetKeyStruct {
    return changetype<AccountTransferAssetKeyStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }

  get assetAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AccountTransferAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AddTimelock extends ethereum.Event {
  get params(): AddTimelock__Params {
    return new AddTimelock__Params(this);
  }
}

export class AddTimelock__Params {
  _event: AddTimelock;

  constructor(event: AddTimelock) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountIdentityKey(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get assetKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get releaseTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AdminFeeOverride extends ethereum.Event {
  get params(): AdminFeeOverride__Params {
    return new AdminFeeOverride__Params(this);
  }
}

export class AdminFeeOverride__Params {
  _event: AdminFeeOverride;

  constructor(event: AdminFeeOverride) {
    this._event = event;
  }

  get organizationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isEnabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get assetKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DepositFeeUpdated extends ethereum.Event {
  get params(): DepositFeeUpdated__Params {
    return new DepositFeeUpdated__Params(this);
  }
}

export class DepositFeeUpdated__Params {
  _event: DepositFeeUpdated;

  constructor(event: DepositFeeUpdated) {
    this._event = event;
  }

  get organizationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feeConfig(): DepositFeeUpdatedFeeConfigStruct {
    return changetype<DepositFeeUpdatedFeeConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class DepositFeeUpdatedFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): DepositFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<DepositFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): DepositFeeUpdatedFeeConfigWithdrawAccountStruct {
    return changetype<DepositFeeUpdatedFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class DepositFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class DepositFeeUpdatedFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class OrderCanceled extends ethereum.Event {
  get params(): OrderCanceled__Params {
    return new OrderCanceled__Params(this);
  }
}

export class OrderCanceled__Params {
  _event: OrderCanceled;

  constructor(event: OrderCanceled) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OrderFeeUpdated extends ethereum.Event {
  get params(): OrderFeeUpdated__Params {
    return new OrderFeeUpdated__Params(this);
  }
}

export class OrderFeeUpdated__Params {
  _event: OrderFeeUpdated;

  constructor(event: OrderFeeUpdated) {
    this._event = event;
  }

  get organizationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feeConfig(): OrderFeeUpdatedFeeConfigStruct {
    return changetype<OrderFeeUpdatedFeeConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class OrderFeeUpdatedFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): OrderFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<OrderFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): OrderFeeUpdatedFeeConfigWithdrawAccountStruct {
    return changetype<OrderFeeUpdatedFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class OrderFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class OrderFeeUpdatedFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class OrderFilled extends ethereum.Event {
  get params(): OrderFilled__Params {
    return new OrderFilled__Params(this);
  }
}

export class OrderFilled__Params {
  _event: OrderFilled;

  constructor(event: OrderFilled) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get orderFiller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountToSwap(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountSwapped(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OrderPlaced extends ethereum.Event {
  get params(): OrderPlaced__Params {
    return new OrderPlaced__Params(this);
  }
}

export class OrderPlaced__Params {
  _event: OrderPlaced;

  constructor(event: OrderPlaced) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateConfiguration extends ethereum.Event {
  get params(): UpdateConfiguration__Params {
    return new UpdateConfiguration__Params(this);
  }
}

export class UpdateConfiguration__Params {
  _event: UpdateConfiguration;

  constructor(event: UpdateConfiguration) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountIdentityKey(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get oldWithdrawAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newWithdrawAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get locktime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get assetKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get withdrawAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class WithdrawFeeUpdated extends ethereum.Event {
  get params(): WithdrawFeeUpdated__Params {
    return new WithdrawFeeUpdated__Params(this);
  }
}

export class WithdrawFeeUpdated__Params {
  _event: WithdrawFeeUpdated;

  constructor(event: WithdrawFeeUpdated) {
    this._event = event;
  }

  get organizationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feeConfig(): WithdrawFeeUpdatedFeeConfigStruct {
    return changetype<WithdrawFeeUpdatedFeeConfigStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class WithdrawFeeUpdatedFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): WithdrawFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<WithdrawFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): WithdrawFeeUpdatedFeeConfigWithdrawAccountStruct {
    return changetype<WithdrawFeeUpdatedFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class WithdrawFeeUpdatedFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class WithdrawFeeUpdatedFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__EMPTY_FEE_DETAILSResult {
  value0: AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct;
  value1: BigInt;
  value2: Bytes;

  constructor(
    value0: AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct,
    value1: BigInt,
    value2: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    return map;
  }

  getAssetKey(): AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }

  getFeeAccountId(): Bytes {
    return this.value2;
  }
}

export class AssetManager___calculateOrderFeeResultValue0Struct extends ethereum.Tuple {
  get assetKey(): AssetManager___calculateOrderFeeResultValue0AssetKeyStruct {
    return changetype<
      AssetManager___calculateOrderFeeResultValue0AssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager___calculateOrderFeeResultValue0AssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager___calculateOrderFeeInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager___organizationToDepositFeesResultWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager___organizationToDepositFeesResult {
  value0: boolean;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;
  value6: AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct;
  value7: AssetManager___organizationToDepositFeesResultWithdrawAccountStruct;

  constructor(
    value0: boolean,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
    value6: AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct,
    value7: AssetManager___organizationToDepositFeesResultWithdrawAccountStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }

  getIsEnabled(): boolean {
    return this.value0;
  }

  getPercentage(): i32 {
    return this.value1;
  }

  getMinFee(): BigInt {
    return this.value2;
  }

  getMaxFee(): BigInt {
    return this.value3;
  }

  getUseFlatRate(): boolean {
    return this.value4;
  }

  getFlatRate(): BigInt {
    return this.value5;
  }

  getFlatRateFeeAssetKey(): AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct {
    return this.value6;
  }

  getWithdrawAccount(): AssetManager___organizationToDepositFeesResultWithdrawAccountStruct {
    return this.value7;
  }
}

export class AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager___organizationToOrderFeesResultWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager___organizationToOrderFeesResult {
  value0: boolean;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;
  value6: AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct;
  value7: AssetManager___organizationToOrderFeesResultWithdrawAccountStruct;

  constructor(
    value0: boolean,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
    value6: AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct,
    value7: AssetManager___organizationToOrderFeesResultWithdrawAccountStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }

  getIsEnabled(): boolean {
    return this.value0;
  }

  getPercentage(): i32 {
    return this.value1;
  }

  getMinFee(): BigInt {
    return this.value2;
  }

  getMaxFee(): BigInt {
    return this.value3;
  }

  getUseFlatRate(): boolean {
    return this.value4;
  }

  getFlatRate(): BigInt {
    return this.value5;
  }

  getFlatRateFeeAssetKey(): AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct {
    return this.value6;
  }

  getWithdrawAccount(): AssetManager___organizationToOrderFeesResultWithdrawAccountStruct {
    return this.value7;
  }
}

export class AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager___organizationToWithdrawFeesResult {
  value0: boolean;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;
  value6: AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct;
  value7: AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct;

  constructor(
    value0: boolean,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
    value6: AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct,
    value7: AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }

  getIsEnabled(): boolean {
    return this.value0;
  }

  getPercentage(): i32 {
    return this.value1;
  }

  getMinFee(): BigInt {
    return this.value2;
  }

  getMaxFee(): BigInt {
    return this.value3;
  }

  getUseFlatRate(): boolean {
    return this.value4;
  }

  getFlatRate(): BigInt {
    return this.value5;
  }

  getFlatRateFeeAssetKey(): AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct {
    return this.value6;
  }

  getWithdrawAccount(): AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct {
    return this.value7;
  }
}

export class AssetManager__calculateDepositFeeResultValue0Struct extends ethereum.Tuple {
  get assetKey(): AssetManager__calculateDepositFeeResultValue0AssetKeyStruct {
    return changetype<
      AssetManager__calculateDepositFeeResultValue0AssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__calculateDepositFeeResultValue0AssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__calculateDepositFeeInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__calculateOrderFeeResultValue0Struct extends ethereum.Tuple {
  get assetKey(): AssetManager__calculateOrderFeeResultValue0AssetKeyStruct {
    return changetype<
      AssetManager__calculateOrderFeeResultValue0AssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__calculateOrderFeeResultValue0AssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__calculateOrderFeeInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__calculateWithdrawFeeResultValue0Struct extends ethereum.Tuple {
  get assetKey(): AssetManager__calculateWithdrawFeeResultValue0AssetKeyStruct {
    return changetype<
      AssetManager__calculateWithdrawFeeResultValue0AssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__calculateWithdrawFeeResultValue0AssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__calculateWithdrawFeeInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__createOrderInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__createOrderInputOrderStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get accountId(): Bytes {
    return this[1].toBytes();
  }

  get assetForSale(): AssetManager__createOrderInputOrderAssetForSaleStruct {
    return changetype<AssetManager__createOrderInputOrderAssetForSaleStruct>(
      this[2].toTuple()
    );
  }

  get assetForSaleAmount(): BigInt {
    return this[3].toBigInt();
  }

  get assetToReceive(): AssetManager__createOrderInputOrderAssetToReceiveStruct {
    return changetype<AssetManager__createOrderInputOrderAssetToReceiveStruct>(
      this[4].toTuple()
    );
  }

  get assetToReceiveAmount(): BigInt {
    return this[5].toBigInt();
  }

  get expirationTimeStamp(): BigInt {
    return this[6].toBigInt();
  }

  get feeDetails(): AssetManager__createOrderInputOrderFeeDetailsStruct {
    return changetype<AssetManager__createOrderInputOrderFeeDetailsStruct>(
      this[7].toTuple()
    );
  }
}

export class AssetManager__createOrderInputOrderAssetForSaleStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__createOrderInputOrderAssetToReceiveStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__createOrderInputOrderFeeDetailsStruct extends ethereum.Tuple {
  get assetKey(): AssetManager__createOrderInputOrderFeeDetailsAssetKeyStruct {
    return changetype<
      AssetManager__createOrderInputOrderFeeDetailsAssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__createOrderInputOrderFeeDetailsAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getAccountIdInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__getAvailableBalanceInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__getAvailableBalanceInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getLockedBalanceInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__getLockedBalanceInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getOrderResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get accountId(): Bytes {
    return this[1].toBytes();
  }

  get assetForSale(): AssetManager__getOrderResultValue0AssetForSaleStruct {
    return changetype<AssetManager__getOrderResultValue0AssetForSaleStruct>(
      this[2].toTuple()
    );
  }

  get assetForSaleAmount(): BigInt {
    return this[3].toBigInt();
  }

  get assetToReceive(): AssetManager__getOrderResultValue0AssetToReceiveStruct {
    return changetype<AssetManager__getOrderResultValue0AssetToReceiveStruct>(
      this[4].toTuple()
    );
  }

  get assetToReceiveAmount(): BigInt {
    return this[5].toBigInt();
  }

  get expirationTimeStamp(): BigInt {
    return this[6].toBigInt();
  }

  get feeDetails(): AssetManager__getOrderResultValue0FeeDetailsStruct {
    return changetype<AssetManager__getOrderResultValue0FeeDetailsStruct>(
      this[7].toTuple()
    );
  }
}

export class AssetManager__getOrderResultValue0AssetForSaleStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getOrderResultValue0AssetToReceiveStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getOrderResultValue0FeeDetailsStruct extends ethereum.Tuple {
  get assetKey(): AssetManager__getOrderResultValue0FeeDetailsAssetKeyStruct {
    return changetype<
      AssetManager__getOrderResultValue0FeeDetailsAssetKeyStruct
    >(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__getOrderResultValue0FeeDetailsAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getTotalBalanceInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__getTotalBalanceInputAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__getWithdrawInfoResultValue0Struct extends ethereum.Tuple {
  get withdrawAddress(): Address {
    return this[0].toAddress();
  }

  get minimumLockTime(): BigInt {
    return this[1].toBigInt();
  }

  get withdrawAddressLastSet(): BigInt {
    return this[2].toBigInt();
  }
}

export class AssetManager__getWithdrawInfoInputAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AssetManager__ordersResultAssetForSaleStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__ordersResultAssetToReceiveStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__ordersResultFeeDetailsStruct extends ethereum.Tuple {
  get assetKey(): AssetManager__ordersResultFeeDetailsAssetKeyStruct {
    return changetype<AssetManager__ordersResultFeeDetailsAssetKeyStruct>(
      this[0].toTuple()
    );
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class AssetManager__ordersResultFeeDetailsAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AssetManager__ordersResult {
  value0: BigInt;
  value1: Bytes;
  value2: AssetManager__ordersResultAssetForSaleStruct;
  value3: BigInt;
  value4: AssetManager__ordersResultAssetToReceiveStruct;
  value5: BigInt;
  value6: BigInt;
  value7: AssetManager__ordersResultFeeDetailsStruct;

  constructor(
    value0: BigInt,
    value1: Bytes,
    value2: AssetManager__ordersResultAssetForSaleStruct,
    value3: BigInt,
    value4: AssetManager__ordersResultAssetToReceiveStruct,
    value5: BigInt,
    value6: BigInt,
    value7: AssetManager__ordersResultFeeDetailsStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromTuple(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getAccountId(): Bytes {
    return this.value1;
  }

  getAssetForSale(): AssetManager__ordersResultAssetForSaleStruct {
    return this.value2;
  }

  getAssetForSaleAmount(): BigInt {
    return this.value3;
  }

  getAssetToReceive(): AssetManager__ordersResultAssetToReceiveStruct {
    return this.value4;
  }

  getAssetToReceiveAmount(): BigInt {
    return this.value5;
  }

  getExpirationTimeStamp(): BigInt {
    return this.value6;
  }

  getFeeDetails(): AssetManager__ordersResultFeeDetailsStruct {
    return this.value7;
  }
}

export class AssetManager extends ethereum.SmartContract {
  static bind(address: Address): AssetManager {
    return new AssetManager("AssetManager", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes4)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes4)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ROLE(): Bytes {
    let result = super.call("DEFAULT_ROLE", "DEFAULT_ROLE():(bytes4)", []);

    return result[0].toBytes();
  }

  try_DEFAULT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("DEFAULT_ROLE", "DEFAULT_ROLE():(bytes4)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EMPTY_FEE_DETAILS(): AssetManager__EMPTY_FEE_DETAILSResult {
    let result = super.call(
      "EMPTY_FEE_DETAILS",
      "EMPTY_FEE_DETAILS():((address,uint256,uint8),uint256,bytes32)",
      []
    );

    return changetype<AssetManager__EMPTY_FEE_DETAILSResult>(
      new AssetManager__EMPTY_FEE_DETAILSResult(
        changetype<AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct>(
          result[0].toTuple()
        ),
        result[1].toBigInt(),
        result[2].toBytes()
      )
    );
  }

  try_EMPTY_FEE_DETAILS(): ethereum.CallResult<
    AssetManager__EMPTY_FEE_DETAILSResult
  > {
    let result = super.tryCall(
      "EMPTY_FEE_DETAILS",
      "EMPTY_FEE_DETAILS():((address,uint256,uint8),uint256,bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__EMPTY_FEE_DETAILSResult>(
        new AssetManager__EMPTY_FEE_DETAILSResult(
          changetype<AssetManager__EMPTY_FEE_DETAILSResultAssetKeyStruct>(
            value[0].toTuple()
          ),
          value[1].toBigInt(),
          value[2].toBytes()
        )
      )
    );
  }

  ID_SEED(): BigInt {
    let result = super.call("ID_SEED", "ID_SEED():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ID_SEED(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ID_SEED", "ID_SEED():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_CONCURRENT_TIMELOCKS_PER_ASSET(): BigInt {
    let result = super.call(
      "MAX_CONCURRENT_TIMELOCKS_PER_ASSET",
      "MAX_CONCURRENT_TIMELOCKS_PER_ASSET():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_CONCURRENT_TIMELOCKS_PER_ASSET(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_CONCURRENT_TIMELOCKS_PER_ASSET",
      "MAX_CONCURRENT_TIMELOCKS_PER_ASSET():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NATIVE_ADDRESS(): Address {
    let result = super.call("NATIVE_ADDRESS", "NATIVE_ADDRESS():(address)", []);

    return result[0].toAddress();
  }

  try_NATIVE_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "NATIVE_ADDRESS",
      "NATIVE_ADDRESS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _calculateOrderFee(
    organizationId: BigInt,
    assetKey: AssetManager___calculateOrderFeeInputAssetKeyStruct,
    amount: BigInt
  ): AssetManager___calculateOrderFeeResultValue0Struct {
    let result = super.call(
      "_calculateOrderFee",
      "_calculateOrderFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return changetype<AssetManager___calculateOrderFeeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try__calculateOrderFee(
    organizationId: BigInt,
    assetKey: AssetManager___calculateOrderFeeInputAssetKeyStruct,
    amount: BigInt
  ): ethereum.CallResult<AssetManager___calculateOrderFeeResultValue0Struct> {
    let result = super.tryCall(
      "_calculateOrderFee",
      "_calculateOrderFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager___calculateOrderFeeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  _organizationFeeOverride(param0: BigInt): boolean {
    let result = super.call(
      "_organizationFeeOverride",
      "_organizationFeeOverride(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try__organizationFeeOverride(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_organizationFeeOverride",
      "_organizationFeeOverride(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _organizationToDepositFees(
    param0: BigInt,
    param1: Bytes
  ): AssetManager___organizationToDepositFeesResult {
    let result = super.call(
      "_organizationToDepositFees",
      "_organizationToDepositFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return new AssetManager___organizationToDepositFeesResult(
      result[0].toBoolean(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      changetype<
        AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct
      >(result[6].toTuple()),
      changetype<
        AssetManager___organizationToDepositFeesResultWithdrawAccountStruct
      >(result[7].toTuple())
    );
  }

  try__organizationToDepositFees(
    param0: BigInt,
    param1: Bytes
  ): ethereum.CallResult<AssetManager___organizationToDepositFeesResult> {
    let result = super.tryCall(
      "_organizationToDepositFees",
      "_organizationToDepositFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AssetManager___organizationToDepositFeesResult(
        value[0].toBoolean(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        changetype<
          AssetManager___organizationToDepositFeesResultFlatRateFeeAssetKeyStruct
        >(value[6].toTuple()),
        changetype<
          AssetManager___organizationToDepositFeesResultWithdrawAccountStruct
        >(value[7].toTuple())
      )
    );
  }

  _organizationToOrderFees(
    param0: BigInt,
    param1: Bytes
  ): AssetManager___organizationToOrderFeesResult {
    let result = super.call(
      "_organizationToOrderFees",
      "_organizationToOrderFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return new AssetManager___organizationToOrderFeesResult(
      result[0].toBoolean(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      changetype<
        AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct
      >(result[6].toTuple()),
      changetype<
        AssetManager___organizationToOrderFeesResultWithdrawAccountStruct
      >(result[7].toTuple())
    );
  }

  try__organizationToOrderFees(
    param0: BigInt,
    param1: Bytes
  ): ethereum.CallResult<AssetManager___organizationToOrderFeesResult> {
    let result = super.tryCall(
      "_organizationToOrderFees",
      "_organizationToOrderFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AssetManager___organizationToOrderFeesResult(
        value[0].toBoolean(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        changetype<
          AssetManager___organizationToOrderFeesResultFlatRateFeeAssetKeyStruct
        >(value[6].toTuple()),
        changetype<
          AssetManager___organizationToOrderFeesResultWithdrawAccountStruct
        >(value[7].toTuple())
      )
    );
  }

  _organizationToWithdrawFees(
    param0: BigInt,
    param1: Bytes
  ): AssetManager___organizationToWithdrawFeesResult {
    let result = super.call(
      "_organizationToWithdrawFees",
      "_organizationToWithdrawFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return new AssetManager___organizationToWithdrawFeesResult(
      result[0].toBoolean(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      changetype<
        AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct
      >(result[6].toTuple()),
      changetype<
        AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct
      >(result[7].toTuple())
    );
  }

  try__organizationToWithdrawFees(
    param0: BigInt,
    param1: Bytes
  ): ethereum.CallResult<AssetManager___organizationToWithdrawFeesResult> {
    let result = super.tryCall(
      "_organizationToWithdrawFees",
      "_organizationToWithdrawFees(uint256,bytes32):(bool,uint16,uint256,uint256,bool,uint256,(address,uint256,uint8),(uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AssetManager___organizationToWithdrawFeesResult(
        value[0].toBoolean(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        changetype<
          AssetManager___organizationToWithdrawFeesResultFlatRateFeeAssetKeyStruct
        >(value[6].toTuple()),
        changetype<
          AssetManager___organizationToWithdrawFeesResultWithdrawAccountStruct
        >(value[7].toTuple())
      )
    );
  }

  authManager(): Address {
    let result = super.call("authManager", "authManager():(address)", []);

    return result[0].toAddress();
  }

  try_authManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("authManager", "authManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  calculateDepositFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateDepositFeeInputAssetKeyStruct,
    amount: BigInt
  ): AssetManager__calculateDepositFeeResultValue0Struct {
    let result = super.call(
      "calculateDepositFee",
      "calculateDepositFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return changetype<AssetManager__calculateDepositFeeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_calculateDepositFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateDepositFeeInputAssetKeyStruct,
    amount: BigInt
  ): ethereum.CallResult<AssetManager__calculateDepositFeeResultValue0Struct> {
    let result = super.tryCall(
      "calculateDepositFee",
      "calculateDepositFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__calculateDepositFeeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  calculateOrderFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateOrderFeeInputAssetKeyStruct,
    amount: BigInt
  ): AssetManager__calculateOrderFeeResultValue0Struct {
    let result = super.call(
      "calculateOrderFee",
      "calculateOrderFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return changetype<AssetManager__calculateOrderFeeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_calculateOrderFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateOrderFeeInputAssetKeyStruct,
    amount: BigInt
  ): ethereum.CallResult<AssetManager__calculateOrderFeeResultValue0Struct> {
    let result = super.tryCall(
      "calculateOrderFee",
      "calculateOrderFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__calculateOrderFeeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  calculateWithdrawFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateWithdrawFeeInputAssetKeyStruct,
    amount: BigInt
  ): AssetManager__calculateWithdrawFeeResultValue0Struct {
    let result = super.call(
      "calculateWithdrawFee",
      "calculateWithdrawFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return changetype<AssetManager__calculateWithdrawFeeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_calculateWithdrawFee(
    organizationId: BigInt,
    assetKey: AssetManager__calculateWithdrawFeeInputAssetKeyStruct,
    amount: BigInt
  ): ethereum.CallResult<AssetManager__calculateWithdrawFeeResultValue0Struct> {
    let result = super.tryCall(
      "calculateWithdrawFee",
      "calculateWithdrawFee(uint256,(address,uint256,uint8),uint256):(((address,uint256,uint8),uint256,bytes32))",
      [
        ethereum.Value.fromUnsignedBigInt(organizationId),
        ethereum.Value.fromTuple(assetKey),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__calculateWithdrawFeeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  createOrder(
    accountIdentityKey: AssetManager__createOrderInputAccountIdentityKeyStruct,
    order: AssetManager__createOrderInputOrderStruct
  ): BigInt {
    let result = super.call(
      "createOrder",
      "createOrder((uint256,uint256),(uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32))):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(order)
      ]
    );

    return result[0].toBigInt();
  }

  try_createOrder(
    accountIdentityKey: AssetManager__createOrderInputAccountIdentityKeyStruct,
    order: AssetManager__createOrderInputOrderStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createOrder",
      "createOrder((uint256,uint256),(uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32))):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(order)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountId(
    accountIdentityKey: AssetManager__getAccountIdInputAccountIdentityKeyStruct
  ): Bytes {
    let result = super.call(
      "getAccountId",
      "getAccountId((uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(accountIdentityKey)]
    );

    return result[0].toBytes();
  }

  try_getAccountId(
    accountIdentityKey: AssetManager__getAccountIdInputAccountIdentityKeyStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getAccountId",
      "getAccountId((uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(accountIdentityKey)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAvailableBalance(
    accountIdentityKey: AssetManager__getAvailableBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getAvailableBalanceInputAssetKeyStruct
  ): BigInt {
    let result = super.call(
      "getAvailableBalance",
      "getAvailableBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );

    return result[0].toBigInt();
  }

  try_getAvailableBalance(
    accountIdentityKey: AssetManager__getAvailableBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getAvailableBalanceInputAssetKeyStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAvailableBalance",
      "getAvailableBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLockedBalance(
    accountIdentityKey: AssetManager__getLockedBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getLockedBalanceInputAssetKeyStruct
  ): BigInt {
    let result = super.call(
      "getLockedBalance",
      "getLockedBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );

    return result[0].toBigInt();
  }

  try_getLockedBalance(
    accountIdentityKey: AssetManager__getLockedBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getLockedBalanceInputAssetKeyStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLockedBalance",
      "getLockedBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrder(orderId: BigInt): AssetManager__getOrderResultValue0Struct {
    let result = super.call(
      "getOrder",
      "getOrder(uint256):((uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32)))",
      [ethereum.Value.fromUnsignedBigInt(orderId)]
    );

    return changetype<AssetManager__getOrderResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOrder(
    orderId: BigInt
  ): ethereum.CallResult<AssetManager__getOrderResultValue0Struct> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(uint256):((uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32)))",
      [ethereum.Value.fromUnsignedBigInt(orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__getOrderResultValue0Struct>(value[0].toTuple())
    );
  }

  getTotalBalance(
    accountIdentityKey: AssetManager__getTotalBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getTotalBalanceInputAssetKeyStruct
  ): BigInt {
    let result = super.call(
      "getTotalBalance",
      "getTotalBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTotalBalance(
    accountIdentityKey: AssetManager__getTotalBalanceInputAccountIdentityKeyStruct,
    assetKey: AssetManager__getTotalBalanceInputAssetKeyStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalBalance",
      "getTotalBalance((uint256,uint256),(address,uint256,uint8)):(uint256)",
      [
        ethereum.Value.fromTuple(accountIdentityKey),
        ethereum.Value.fromTuple(assetKey)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWithdrawInfo(
    accountIdentityKey: AssetManager__getWithdrawInfoInputAccountIdentityKeyStruct
  ): AssetManager__getWithdrawInfoResultValue0Struct {
    let result = super.call(
      "getWithdrawInfo",
      "getWithdrawInfo((uint256,uint256)):((address,uint256,uint256))",
      [ethereum.Value.fromTuple(accountIdentityKey)]
    );

    return changetype<AssetManager__getWithdrawInfoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getWithdrawInfo(
    accountIdentityKey: AssetManager__getWithdrawInfoInputAccountIdentityKeyStruct
  ): ethereum.CallResult<AssetManager__getWithdrawInfoResultValue0Struct> {
    let result = super.tryCall(
      "getWithdrawInfo",
      "getWithdrawInfo((uint256,uint256)):((address,uint256,uint256))",
      [ethereum.Value.fromTuple(accountIdentityKey)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AssetManager__getWithdrawInfoResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  orders(param0: BigInt): AssetManager__ordersResult {
    let result = super.call(
      "orders",
      "orders(uint256):(uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new AssetManager__ordersResult(
      result[0].toBigInt(),
      result[1].toBytes(),
      changetype<AssetManager__ordersResultAssetForSaleStruct>(
        result[2].toTuple()
      ),
      result[3].toBigInt(),
      changetype<AssetManager__ordersResultAssetToReceiveStruct>(
        result[4].toTuple()
      ),
      result[5].toBigInt(),
      result[6].toBigInt(),
      changetype<AssetManager__ordersResultFeeDetailsStruct>(
        result[7].toTuple()
      )
    );
  }

  try_orders(param0: BigInt): ethereum.CallResult<AssetManager__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(uint256):(uint256,bytes32,(address,uint256,uint8),uint256,(address,uint256,uint8),uint256,uint256,((address,uint256,uint8),uint256,bytes32))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AssetManager__ordersResult(
        value[0].toBigInt(),
        value[1].toBytes(),
        changetype<AssetManager__ordersResultAssetForSaleStruct>(
          value[2].toTuple()
        ),
        value[3].toBigInt(),
        changetype<AssetManager__ordersResultAssetToReceiveStruct>(
          value[4].toTuple()
        ),
        value[5].toBigInt(),
        value[6].toBigInt(),
        changetype<AssetManager__ordersResultFeeDetailsStruct>(
          value[7].toTuple()
        )
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get authManagerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTimelockCall extends ethereum.Call {
  get inputs(): AddTimelockCall__Inputs {
    return new AddTimelockCall__Inputs(this);
  }

  get outputs(): AddTimelockCall__Outputs {
    return new AddTimelockCall__Outputs(this);
  }
}

export class AddTimelockCall__Inputs {
  _call: AddTimelockCall;

  constructor(call: AddTimelockCall) {
    this._call = call;
  }

  get accountIdentityKey(): AddTimelockCallAccountIdentityKeyStruct {
    return changetype<AddTimelockCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get assetKey(): AddTimelockCallAssetKeyStruct {
    return changetype<AddTimelockCallAssetKeyStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get releaseTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddTimelockCall__Outputs {
  _call: AddTimelockCall;

  constructor(call: AddTimelockCall) {
    this._call = call;
  }
}

export class AddTimelockCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class AddTimelockCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class AdminFeeOverrideCall extends ethereum.Call {
  get inputs(): AdminFeeOverrideCall__Inputs {
    return new AdminFeeOverrideCall__Inputs(this);
  }

  get outputs(): AdminFeeOverrideCall__Outputs {
    return new AdminFeeOverrideCall__Outputs(this);
  }
}

export class AdminFeeOverrideCall__Inputs {
  _call: AdminFeeOverrideCall;

  constructor(call: AdminFeeOverrideCall) {
    this._call = call;
  }

  get organizationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isEnabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AdminFeeOverrideCall__Outputs {
  _call: AdminFeeOverrideCall;

  constructor(call: AdminFeeOverrideCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get accountIdentityKey(): CancelOrderCallAccountIdentityKeyStruct {
    return changetype<CancelOrderCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get orderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CancelOrderCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class CreateOrderCall extends ethereum.Call {
  get inputs(): CreateOrderCall__Inputs {
    return new CreateOrderCall__Inputs(this);
  }

  get outputs(): CreateOrderCall__Outputs {
    return new CreateOrderCall__Outputs(this);
  }
}

export class CreateOrderCall__Inputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get accountIdentityKey(): CreateOrderCallAccountIdentityKeyStruct {
    return changetype<CreateOrderCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get order(): CreateOrderCallOrderStruct {
    return changetype<CreateOrderCallOrderStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class CreateOrderCall__Outputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateOrderCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class CreateOrderCallOrderStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get accountId(): Bytes {
    return this[1].toBytes();
  }

  get assetForSale(): CreateOrderCallOrderAssetForSaleStruct {
    return changetype<CreateOrderCallOrderAssetForSaleStruct>(
      this[2].toTuple()
    );
  }

  get assetForSaleAmount(): BigInt {
    return this[3].toBigInt();
  }

  get assetToReceive(): CreateOrderCallOrderAssetToReceiveStruct {
    return changetype<CreateOrderCallOrderAssetToReceiveStruct>(
      this[4].toTuple()
    );
  }

  get assetToReceiveAmount(): BigInt {
    return this[5].toBigInt();
  }

  get expirationTimeStamp(): BigInt {
    return this[6].toBigInt();
  }

  get feeDetails(): CreateOrderCallOrderFeeDetailsStruct {
    return changetype<CreateOrderCallOrderFeeDetailsStruct>(this[7].toTuple());
  }
}

export class CreateOrderCallOrderAssetForSaleStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class CreateOrderCallOrderAssetToReceiveStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class CreateOrderCallOrderFeeDetailsStruct extends ethereum.Tuple {
  get assetKey(): CreateOrderCallOrderFeeDetailsAssetKeyStruct {
    return changetype<CreateOrderCallOrderFeeDetailsAssetKeyStruct>(
      this[0].toTuple()
    );
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeAccountId(): Bytes {
    return this[2].toBytes();
  }
}

export class CreateOrderCallOrderFeeDetailsAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get accountIdentityKey(): DepositCallAccountIdentityKeyStruct {
    return changetype<DepositCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get assetKey(): DepositCallAssetKeyStruct {
    return changetype<DepositCallAssetKeyStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class DepositCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class FillOrderCall extends ethereum.Call {
  get inputs(): FillOrderCall__Inputs {
    return new FillOrderCall__Inputs(this);
  }

  get outputs(): FillOrderCall__Outputs {
    return new FillOrderCall__Outputs(this);
  }
}

export class FillOrderCall__Inputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get accountIdentityKey(): FillOrderCallAccountIdentityKeyStruct {
    return changetype<FillOrderCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get orderId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get orderFiller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class FillOrderCall__Outputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }
}

export class FillOrderCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class FreeTimelockCall extends ethereum.Call {
  get inputs(): FreeTimelockCall__Inputs {
    return new FreeTimelockCall__Inputs(this);
  }

  get outputs(): FreeTimelockCall__Outputs {
    return new FreeTimelockCall__Outputs(this);
  }
}

export class FreeTimelockCall__Inputs {
  _call: FreeTimelockCall;

  constructor(call: FreeTimelockCall) {
    this._call = call;
  }

  get accountIdentityKey(): FreeTimelockCallAccountIdentityKeyStruct {
    return changetype<FreeTimelockCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get assetKey(): FreeTimelockCallAssetKeyStruct {
    return changetype<FreeTimelockCallAssetKeyStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class FreeTimelockCall__Outputs {
  _call: FreeTimelockCall;

  constructor(call: FreeTimelockCall) {
    this._call = call;
  }
}

export class FreeTimelockCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class FreeTimelockCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetWithdrawInfoCall extends ethereum.Call {
  get inputs(): SetWithdrawInfoCall__Inputs {
    return new SetWithdrawInfoCall__Inputs(this);
  }

  get outputs(): SetWithdrawInfoCall__Outputs {
    return new SetWithdrawInfoCall__Outputs(this);
  }
}

export class SetWithdrawInfoCall__Inputs {
  _call: SetWithdrawInfoCall;

  constructor(call: SetWithdrawInfoCall) {
    this._call = call;
  }

  get accountIdentityKey(): SetWithdrawInfoCallAccountIdentityKeyStruct {
    return changetype<SetWithdrawInfoCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get withdrawAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get minimumLockTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetWithdrawInfoCall__Outputs {
  _call: SetWithdrawInfoCall;

  constructor(call: SetWithdrawInfoCall) {
    this._call = call;
  }
}

export class SetWithdrawInfoCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateDefaultDepositFeeCall extends ethereum.Call {
  get inputs(): UpdateDefaultDepositFeeCall__Inputs {
    return new UpdateDefaultDepositFeeCall__Inputs(this);
  }

  get outputs(): UpdateDefaultDepositFeeCall__Outputs {
    return new UpdateDefaultDepositFeeCall__Outputs(this);
  }
}

export class UpdateDefaultDepositFeeCall__Inputs {
  _call: UpdateDefaultDepositFeeCall;

  constructor(call: UpdateDefaultDepositFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateDefaultDepositFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateDefaultDepositFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get feeConfig(): UpdateDefaultDepositFeeCallFeeConfigStruct {
    return changetype<UpdateDefaultDepositFeeCallFeeConfigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class UpdateDefaultDepositFeeCall__Outputs {
  _call: UpdateDefaultDepositFeeCall;

  constructor(call: UpdateDefaultDepositFeeCall) {
    this._call = call;
  }
}

export class UpdateDefaultDepositFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDefaultDepositFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateDefaultDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<
      UpdateDefaultDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct
    >(this[6].toTuple());
  }

  get withdrawAccount(): UpdateDefaultDepositFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<
      UpdateDefaultDepositFeeCallFeeConfigWithdrawAccountStruct
    >(this[7].toTuple());
  }
}

export class UpdateDefaultDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateDefaultDepositFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDefaultOrderFeeCall extends ethereum.Call {
  get inputs(): UpdateDefaultOrderFeeCall__Inputs {
    return new UpdateDefaultOrderFeeCall__Inputs(this);
  }

  get outputs(): UpdateDefaultOrderFeeCall__Outputs {
    return new UpdateDefaultOrderFeeCall__Outputs(this);
  }
}

export class UpdateDefaultOrderFeeCall__Inputs {
  _call: UpdateDefaultOrderFeeCall;

  constructor(call: UpdateDefaultOrderFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateDefaultOrderFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateDefaultOrderFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get feeConfig(): UpdateDefaultOrderFeeCallFeeConfigStruct {
    return changetype<UpdateDefaultOrderFeeCallFeeConfigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class UpdateDefaultOrderFeeCall__Outputs {
  _call: UpdateDefaultOrderFeeCall;

  constructor(call: UpdateDefaultOrderFeeCall) {
    this._call = call;
  }
}

export class UpdateDefaultOrderFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDefaultOrderFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateDefaultOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<
      UpdateDefaultOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct
    >(this[6].toTuple());
  }

  get withdrawAccount(): UpdateDefaultOrderFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<UpdateDefaultOrderFeeCallFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class UpdateDefaultOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateDefaultOrderFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDefaultWithdrawFeeCall extends ethereum.Call {
  get inputs(): UpdateDefaultWithdrawFeeCall__Inputs {
    return new UpdateDefaultWithdrawFeeCall__Inputs(this);
  }

  get outputs(): UpdateDefaultWithdrawFeeCall__Outputs {
    return new UpdateDefaultWithdrawFeeCall__Outputs(this);
  }
}

export class UpdateDefaultWithdrawFeeCall__Inputs {
  _call: UpdateDefaultWithdrawFeeCall;

  constructor(call: UpdateDefaultWithdrawFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateDefaultWithdrawFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateDefaultWithdrawFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get feeConfig(): UpdateDefaultWithdrawFeeCallFeeConfigStruct {
    return changetype<UpdateDefaultWithdrawFeeCallFeeConfigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class UpdateDefaultWithdrawFeeCall__Outputs {
  _call: UpdateDefaultWithdrawFeeCall;

  constructor(call: UpdateDefaultWithdrawFeeCall) {
    this._call = call;
  }
}

export class UpdateDefaultWithdrawFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDefaultWithdrawFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateDefaultWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<
      UpdateDefaultWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct
    >(this[6].toTuple());
  }

  get withdrawAccount(): UpdateDefaultWithdrawFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<
      UpdateDefaultWithdrawFeeCallFeeConfigWithdrawAccountStruct
    >(this[7].toTuple());
  }
}

export class UpdateDefaultWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateDefaultWithdrawFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDepositFeeCall extends ethereum.Call {
  get inputs(): UpdateDepositFeeCall__Inputs {
    return new UpdateDepositFeeCall__Inputs(this);
  }

  get outputs(): UpdateDepositFeeCall__Outputs {
    return new UpdateDepositFeeCall__Outputs(this);
  }
}

export class UpdateDepositFeeCall__Inputs {
  _call: UpdateDepositFeeCall;

  constructor(call: UpdateDepositFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateDepositFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateDepositFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get assetKey(): UpdateDepositFeeCallAssetKeyStruct {
    return changetype<UpdateDepositFeeCallAssetKeyStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get feeConfig(): UpdateDepositFeeCallFeeConfigStruct {
    return changetype<UpdateDepositFeeCallFeeConfigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class UpdateDepositFeeCall__Outputs {
  _call: UpdateDepositFeeCall;

  constructor(call: UpdateDepositFeeCall) {
    this._call = call;
  }
}

export class UpdateDepositFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateDepositFeeCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateDepositFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<UpdateDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): UpdateDepositFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<UpdateDepositFeeCallFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class UpdateDepositFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateDepositFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateOrderFeeCall extends ethereum.Call {
  get inputs(): UpdateOrderFeeCall__Inputs {
    return new UpdateOrderFeeCall__Inputs(this);
  }

  get outputs(): UpdateOrderFeeCall__Outputs {
    return new UpdateOrderFeeCall__Outputs(this);
  }
}

export class UpdateOrderFeeCall__Inputs {
  _call: UpdateOrderFeeCall;

  constructor(call: UpdateOrderFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateOrderFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateOrderFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get assetKey(): UpdateOrderFeeCallAssetKeyStruct {
    return changetype<UpdateOrderFeeCallAssetKeyStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get feeConfig(): UpdateOrderFeeCallFeeConfigStruct {
    return changetype<UpdateOrderFeeCallFeeConfigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class UpdateOrderFeeCall__Outputs {
  _call: UpdateOrderFeeCall;

  constructor(call: UpdateOrderFeeCall) {
    this._call = call;
  }
}

export class UpdateOrderFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateOrderFeeCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateOrderFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<UpdateOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): UpdateOrderFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<UpdateOrderFeeCallFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class UpdateOrderFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateOrderFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateWithdrawFeeCall extends ethereum.Call {
  get inputs(): UpdateWithdrawFeeCall__Inputs {
    return new UpdateWithdrawFeeCall__Inputs(this);
  }

  get outputs(): UpdateWithdrawFeeCall__Outputs {
    return new UpdateWithdrawFeeCall__Outputs(this);
  }
}

export class UpdateWithdrawFeeCall__Inputs {
  _call: UpdateWithdrawFeeCall;

  constructor(call: UpdateWithdrawFeeCall) {
    this._call = call;
  }

  get accountIdentityKey(): UpdateWithdrawFeeCallAccountIdentityKeyStruct {
    return changetype<UpdateWithdrawFeeCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get organizationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get assetKey(): UpdateWithdrawFeeCallAssetKeyStruct {
    return changetype<UpdateWithdrawFeeCallAssetKeyStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get feeConfig(): UpdateWithdrawFeeCallFeeConfigStruct {
    return changetype<UpdateWithdrawFeeCallFeeConfigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class UpdateWithdrawFeeCall__Outputs {
  _call: UpdateWithdrawFeeCall;

  constructor(call: UpdateWithdrawFeeCall) {
    this._call = call;
  }
}

export class UpdateWithdrawFeeCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdateWithdrawFeeCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateWithdrawFeeCallFeeConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get percentage(): i32 {
    return this[1].toI32();
  }

  get minFee(): BigInt {
    return this[2].toBigInt();
  }

  get maxFee(): BigInt {
    return this[3].toBigInt();
  }

  get useFlatRate(): boolean {
    return this[4].toBoolean();
  }

  get flatRate(): BigInt {
    return this[5].toBigInt();
  }

  get flatRateFeeAssetKey(): UpdateWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct {
    return changetype<UpdateWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct>(
      this[6].toTuple()
    );
  }

  get withdrawAccount(): UpdateWithdrawFeeCallFeeConfigWithdrawAccountStruct {
    return changetype<UpdateWithdrawFeeCallFeeConfigWithdrawAccountStruct>(
      this[7].toTuple()
    );
  }
}

export class UpdateWithdrawFeeCallFeeConfigFlatRateFeeAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}

export class UpdateWithdrawFeeCallFeeConfigWithdrawAccountStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get accountIdentityKey(): WithdrawCallAccountIdentityKeyStruct {
    return changetype<WithdrawCallAccountIdentityKeyStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get assetKey(): WithdrawCallAssetKeyStruct {
    return changetype<WithdrawCallAssetKeyStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCallAccountIdentityKeyStruct extends ethereum.Tuple {
  get organizationId(): BigInt {
    return this[0].toBigInt();
  }

  get relatedId(): BigInt {
    return this[1].toBigInt();
  }
}

export class WithdrawCallAssetKeyStruct extends ethereum.Tuple {
  get assetAddress(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get assetType(): i32 {
    return this[2].toI32();
  }
}
